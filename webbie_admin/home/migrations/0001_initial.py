# Generated by Django 4.2.3 on 2023-07-31 20:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('name', models.CharField(max_length=25)),
                ('country_code', models.CharField(default=None, help_text='do not add + extension', max_length=5, null=True)),
                ('mobile_number', models.CharField(default=None, help_text='do not add country code', max_length=10, null=True)),
                ('phone_number', models.CharField(default=None, help_text='landline number', max_length=10, null=True)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'super-admin'), (2, 'admin'), (3, 'merchant'), (4, 'merchant-staff'), (5, 'customer')], default=5)),
                ('is_active', models.BooleanField(default=True)),
                ('is_mail_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('otp', models.IntegerField(default=None, null=True)),
                ('otp_created_time', models.DateTimeField(default=None, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('parent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('code', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=15)),
                ('exchange_rate', models.DecimalField(decimal_places=4, max_digits=10)),
                ('decimal_place', models.PositiveSmallIntegerField()),
                ('created_date', models.DateTimeField()),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'currencies',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=200)),
                ('module_description', models.TextField(blank=True, default=None, null=True)),
                ('status', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField()),
                ('last_modified', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='module_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='module_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'User_module',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the product.', max_length=255)),
                ('description', models.TextField(help_text='A detailed description of the product.')),
                ('count', models.PositiveIntegerField(default=0, help_text='The available quantity of the product.')),
                ('price', models.DecimalField(decimal_places=2, help_text='The price of the product.', max_digits=10)),
                ('brand', models.CharField(help_text='The brand name of the product.', max_length=100)),
                ('dimension', models.CharField(help_text='The dimensions of the product in the format: Length*Width*Height.', max_length=20)),
                ('size', models.CharField(help_text='The size or measurement information of the product.', max_length=50)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time when the product was created.')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The date and time when the product was last updated.')),
                ('status', models.BooleanField(default=True, help_text='The status of the product. True means active, and False means inactive.')),
                ('verification_status', models.BooleanField(default=False, help_text='The verification status of the product. True means verified, and False means not verified.')),
                ('weight', models.DecimalField(decimal_places=2, default=0.0, help_text='The weight of the product.', max_digits=8)),
            ],
            options={
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('duration', models.IntegerField(help_text='duration in days')),
                ('price', models.FloatField()),
                ('info', models.CharField(max_length=250)),
                ('discount', models.FloatField()),
            ],
            options={
                'db_table': 'subscription_detail',
            },
        ),
        migrations.CreateModel(
            name='WebsiteInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_name', models.CharField(max_length=25, unique=True)),
                ('host_name', models.CharField(max_length=25, unique=True)),
                ('logo', models.URLField()),
                ('banner', models.URLField()),
                ('status', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_website', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'website_info',
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.BooleanField(default=False)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.module')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'User_permission',
            },
        ),
        migrations.CreateModel(
            name='UserExtraDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_modified', models.DateTimeField(blank=True, default=None, null=True)),
                ('is_invited', models.BooleanField(default=None, null=True)),
                ('invite_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('created_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_extra_detail', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'User_extra_detail',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='The URL of the product image.', max_length=500)),
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time when the product image was created.')),
                ('sequence', models.PositiveIntegerField(default=0, help_text='The sequence number to order the images.')),
                ('product', models.ForeignKey(help_text='The product associated with this image.', on_delete=django.db.models.deletion.CASCADE, related_name='images', to='home.product')),
            ],
            options={
                'db_table': 'product_image',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=15)),
                ('status', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='home.productcategory')),
            ],
            options={
                'db_table': 'product_category',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(help_text='The category of the product.', on_delete=django.db.models.deletion.CASCADE, to='home.productcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='currency',
            field=models.ForeignKey(help_text='The currency used for pricing the product.', on_delete=django.db.models.deletion.PROTECT, to='home.currency'),
        ),
        migrations.AddField(
            model_name='product',
            name='merchant_id',
            field=models.ForeignKey(help_text='The ID of the merchant selling the product.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='MerchantSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_start_timestamp', models.DateTimeField()),
                ('subscription_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_type_map', to='home.subscriptiondetail')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merchant_subscription_map', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'merchant_subscription',
            },
        ),
        migrations.CreateModel(
            name='AddressDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line1', models.CharField(max_length=25)),
                ('address_line2', models.CharField(max_length=25)),
                ('city', models.CharField(max_length=25)),
                ('country', models.CharField(max_length=25)),
                ('postal_code', models.CharField(max_length=25)),
                ('receivers_name', models.CharField(max_length=25)),
                ('country_code', models.CharField(default=None, help_text='do not add + extension', max_length=5, null=True)),
                ('mobile_number', models.CharField(default=None, help_text='do not add country code', max_length=10, null=True, unique=True)),
                ('address_nick_name', models.CharField(max_length=25)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_address', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'address_detail',
            },
        ),
    ]
